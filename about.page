---
title: Markdown Link
description: Searches for internal links.
icon: 'M20.56 18H3.44C2.65 18 2 17.37 2 16.59V7.41C2 6.63 2.65 6 3.44 6H20.56C21.35 6 22 6.63 22 7.41V16.59C22 17.37 21.35 18 20.56 18M6.81 15.19V11.53L8.73 13.88L10.65 11.53V15.19H12.58V8.81H10.65L8.73 11.16L6.81 8.81H4.89V15.19H6.81M19.69 12H17.77V8.81H15.85V12H13.92L16.81 15.28L19.69 12Z'
color: '#0f709d'
author: Taufik Nurrohman
type: Markdown
version: 2.4.9

alert:
  stale:
  - 'This extension is considered obsolete. I recommend you to just use the [Link](https://github.com/mecha-cms/x.link) extension which is more natural and will keep the page data clean even though this extension will be removed eventually when you donâ€™t need it. This extension last updated and known to be compatible with core version 3.0.0. After that, I do not guarantee that I will continue to update this extension. Contributors and users who still consider this extension as a necessary extension are welcome to [update this extension](https://github.com/mecha-cms/x.markdown.link) so that it will remain compatible with newer core versions.'
...

This extension generates link text and title attribute automatically based on the page route provided. If the page file
you are trying to provide from the route does not exist, this extension will mark the link with a red strikethrough text
effect.

### Usage

The link syntax is exactly the same as referenced link syntax in Markdown, the only difference is that you need to add a
`link:` prefix to the reference ID:

 - <code>&#x5b;link:page-123&#x5d;</code> will be replaced with <code>&#x5b;Page Title&#x5d;(http://127.0.0.1/path/to/page-123 "Page Title")</code>.
 - <code>&#x5b;link text&#x5d;&#x5b;link:page-123&#x5d;</code> will be replaced with <code>&#x5b;link text&#x5d;(http://127.0.0.1/path/to/page-123 "Page Title")</code>.
 - <code>&#x5b;link:does-not-exist&#x5d;</code> will be replaced with <code>&lt;s role="status" style="color: #f00;" title="&#x5b;link:does-not-exist&#x5d;"&gt;broken link&lt;/s&gt;</code>.

All of the page route provided will be parsed relative to in which the page is stored. To go to the upper level of the
current page route, you can use `../`:

 - <code>&#x5b;link:../blog/post-123&#x5d;</code> will be replaced with <code>&#x5b;Page Title&#x5d;(/path/blog/post-123 "Post Title")</code>.